create_enemy(100,7,5,no,0,0,no);
create_enemy(110,2,6,no,0,0,no);
create_enemy(120,2,6,no,0,0,no);
create_enemy(130,2,6,no,0,0,no);
create_enemy(140,2,6,no,0,0,no);
create_enemy(150,2,6,no,0,0,no);
create_enemy(160,2,6,no,0,0,no);
create_enemy(170,2,6,no,0,0,no);
create_enemy(180,2,6,no,0,0,no);
create_enemy(190,2,6,no,0,0,no);
create_enemy(200,5,5,no,0,0,no);
create_enemy(250,7,7,no,0,0,no);
create_enemy(250,7,7,no,0,0,no);
create_enemy(275,7,0,no,0,0,no);
create_enemy(275,7,0,no,0,0,no);
create_enemy(300,4,1,no,0,0,no);
create_enemy(300,4,2,no,0,0,no);
create_enemy(325,4,8,no,0,0,no);
create_enemy(325,4,9,no,0,0,no);
create_enemy(460,11,6,no,0,0,no);
create_enemy(470,11,6,no,0,0,no);
create_enemy(480,11,6,no,0,0,no);
create_enemy(490,11,6,no,0,0,no);
create_enemy(500,11,6,no,0,0,no);
create_enemy(500,11,6,no,0,0,no);
create_enemy(510,11,6,no,0,0,no);
create_enemy(510,11,6,no,0,0,no);
create_enemy(520,11,6,no,0,0,no);
create_enemy(530,11,6,no,0,0,no);
create_enemy(540,11,6,no,0,0,no);
create_enemy(550,11,6,no,0,0,no);
create_enemy(560,11,6,no,0,0,no);
create_enemy(570,11,6,no,0,0,no);
create_enemy(580,11,6,no,0,0,no);
create_enemy(590,11,6,no,0,0,no);
create_enemy(600,11,6,no,0,0,no);
/*
create_enemy(625)
{
	for (int s = 0; s < 4; s++)
	{
		{
			g_POWERUP[s].script = scriptpowerup;
			g_POWERUP[s].type = addhealth;
			g_POWERUP[s].change = no;
			g_POWERUP[s].position.x = gridalignment * rand1.RandInt(5,14);
			g_POWERUP[s].position.y = gridalignment * 0;
			SetSpriteState(&g_POWERUP[s], g_POWERUP[s].type);
			g_time++;break;
		}
	}
}
*/
create_enemy(650,9,3,no,0,0,no);
create_enemy(650,9,4,no,0,0,no);
create_enemy(675,9,1,no,0,0,no);
create_enemy(675,9,2,no,0,0,no);
create_enemy(700,6,5,no,0,0,no);
create_enemy(725,4,10,no,0,0,no);
create_enemy(725,4,11,no,0,0,no);
create_enemy(750,3,8,no,0,0,no);
create_enemy(750,3,9,no,0,0,no);
create_enemy(800,4,0,no,0,0,no);
create_enemy(825,3,1,no,0,0,no);
create_enemy(850,3,2,no,0,0,no);
create_enemy(875,4,3,no,0,0,no);
create_enemy(900,4,3,no,0,0,no);
create_enemy(950,4,3,no,0,0,no);
create_enemy(1000,6,0,no,0,0,no);
create_enemy(1020,6,0,no,0,0,no);
create_enemy(1040,7,1,no,0,0,no);
create_enemy(1060,7,2,no,0,0,no);
create_enemy(1080,8,3,no,0,0,no);
create_enemy(1100,8,4,no,0,0,no);
create_enemy(1150,9,5,no,0,0,no);
create_enemy(1175,11,6,no,0,0,no);
create_enemy(1185,11,6,no,0,0,no);
create_enemy(1195,11,6,no,0,0,no);
create_enemy(1205,11,6,no,0,0,no);
create_enemy(1215,11,6,no,0,0,no);
create_enemy(1225,11,6,no,0,0,no);
create_enemy(1235,11,6,no,0,0,no);
create_enemy(1245,11,6,no,0,0,no);
create_enemy(1255,11,6,no,0,0,no);
create_enemy(1265,11,6,no,0,0,no);
create_enemy(1275,11,6,no,0,0,no);
create_enemy(1285,11,6,no,0,0,no);
create_enemy(1295,11,6,no,0,0,no);
create_enemy(1300,11,6,no,0,0,no);
create_enemy(1375,11,6,no,0,0,no);
create_enemy(1410,11,6,no,0,0,no);
create_enemy(1460,9,5,no,0,0,no);
create_enemy(1500,8,0,no,0,0,no);
create_enemy(1500,8,0,no,0,0,no);
create_enemy(1550,8,7,no,0,0,no);
create_enemy(1550,8,7,no,0,0,no);
create_enemy(1600,4,1,no,0,0,no);
create_enemy(1600,4,2,no,0,0,no);
create_enemy(1650,3,0,no,0,0,yes);
create_enemy(1650,3,0,no,0,0,yes);
create_enemy(1700,8,1,no,0,0,no);
create_enemy(1700,8,1,no,0,0,no);
create_enemy(1750,9,5,no,0,0,no);
create_enemy(1800,8,8,no,0,0,no);
create_enemy(1800,8,9,no,0,0,no);
create_enemy(1850,6,7,no,0,0,no);
create_enemy(1850,6,7,no,0,0,no);
create_enemy(1900,5,5,no,0,0,no);
/*
create_enemy(1915,
	for (int s = 0; s < 4; s++)
	{
		{
			g_POWERUP[s].type = addhealth;
			g_POWERUP[s].change = no;
			g_POWERUP[s].position.x = gridalignment * rand1.RandInt(5,14);
			g_POWERUP[s].position.y = gridalignment * 0;
			SetSpriteState(&g_POWERUP[s], g_POWERUP[s].type);
			g_time++;break;
		}
	}
}
*/


loadLevelOnCollision
level10
64
2148
